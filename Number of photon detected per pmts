PrtRunAction.cxx:

// Make this appear first!
#include "G4Timer.hh"
#include "PrtRunAction.h"
#include "G4Run.hh"
#include "PrtManager.h"
#include "PrtPixelSD.h"
#include "G4SDManager.hh"



PrtRunAction::PrtRunAction()
 : G4UserRunAction(),
   fTimer(0)
{
  fTimer = new G4Timer;
}

PrtRunAction::~PrtRunAction()
{
  delete fTimer;
}

void PrtRunAction::BeginOfRunAction(const G4Run* aRun)
{
  G4cout << "### Run " << aRun->GetRunID() << " start." << G4endl;
  fTimer->Start();  
}

void PrtRunAction::EndOfRunAction(const G4Run* aRun)
{
  if(IsMaster())
    {
      PrtManager::Instance()->fillLut();
      PrtManager::Instance()->save();
     
       // Access the sensitive detector
      G4SDManager* sdm = G4SDManager::GetSDMpointer();
      PrtPixelSD* pixelSD = (PrtPixelSD*) sdm->FindSensitiveDetector("PixelSD");

      if(pixelSD) {
        auto counts = pixelSD->GetPhotonCounts();
        std::cout << "\n=== Total photons detected per PMT (Run " 
                  << aRun->GetRunID() << ") ===" << std::endl;
        for(auto &kv : counts) {
          std::cout << "PMT " << kv.first 
                    << " : " << kv.second << " photons" << std::endl;
        }
        std::cout << "=============================================\n" << std::endl;
      }
  
      fTimer->Stop();
      G4cout << "number of event = " << aRun->GetNumberOfEvent()
	     << " " << *fTimer << G4endl;
    }
}
